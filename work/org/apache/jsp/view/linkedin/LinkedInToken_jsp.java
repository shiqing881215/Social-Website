/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.40
 * Generated at: 2014-01-16 22:52:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.linkedin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class LinkedInToken_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("\t<head>\n");
      out.write("\t\t<title>Instagram Init Page</title>\n");
      out.write("\t\t<script src=\"/BWeb/js/jquery-1.9.1.js\"></script>\n");
      out.write("\t\t<script src=\"/BWeb/js/linkedin/linkedin.js\"></script>\n");
      out.write("\t</head>\n");
      out.write("\t\n");
      out.write("\t<body>\n");
      out.write("\t\t<div style=\"visibility: hidden;\" id=\"code\">\n");
      out.write("\t\t\t");
      out.print( request.getAttribute("code") );
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<script type=\"text/javascript\">\n");
      out.write("\t\t\t/* debugger;\n");
      out.write("\t\t\tvar code = getURLParameter(\"code\");\n");
      out.write("\t\t\tvar state = getURLParameter(\"state\");\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t// STATE doesn't match - possible CSRF\n");
      out.write("\t\t\tif (state !== \"DCEEFWF45453sdffef424\") {\n");
      out.write("\t\t\t\twindow.location = \"http://localhost:8080/view/linkedin/LinkedInLogin.jsp\";\n");
      out.write("\t\t\t} */\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t// TODO  move key and secret here\n");
      out.write("\t\t\tdebugger;\n");
      out.write("\t\t\tvar accessTokenUrl = \n");
      out.write("\t\t\t\t\"https://www.linkedin.com/uas/oauth2/accessToken?grant_type=authorization_code\" +\n");
      out.write("                \"&code=\" + document.getElementById(\"code\").innerHTML + \n");
      out.write("\t\t\t\t\"&redirect_uri=http://localhost:8080/BWeb/linkedin_Token.do\" + \n");
      out.write("                \"&client_id=0d51b2cxwpfy\" + \n");
      out.write("                \"&client_secret=MUcWUgRIyac7Hg2i\";\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t// Send the redirect with code to LinkedIn to get the access token\n");
      out.write("\t\t\t/* $.ajax({\n");
      out.write("\t\t\t\ttype : \"POST\",\n");
      out.write("\t\t\t\turl : accessTokenUrl,\n");
      out.write("\t\t\t\tdata : {},\n");
      out.write("\t\t\t\tdataType : \"jsonp\",\n");
      out.write("\t\t\t\t/* success : function(result) {\n");
      out.write("\t\t\t\t\tdebugger;\n");
      out.write("\t\t\t\t\twindow.location = (\"http://localhost:8080/BWeb/ins_InstagramHome.do\");\n");
      out.write("\t\t\t\t} */\n");
      out.write("\t\t\t/*}).done (function (result) {\n");
      out.write("\t\t\t\tdebugger;\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t}); */\n");
      out.write("\t\t\twindow.location = accessTokenUrl;\n");
      out.write("\t\t</script>\n");
      out.write("\t</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
